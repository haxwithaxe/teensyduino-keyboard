// generated by gen_chorder.h.py from keymaps/default.map.json, keymaps/fn.map.json, keymaps/num_sym.map.json
#ifndef _KEYMAP_H_
#define  _KEYMAP_H_

uint8_t modkeys[8] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
uint8_t keymap_default[256] = {
	0x7F, // KEY__; 
	0x3F, // KEY_numlock; 
	0x5F, // KEY__; 
	0x1F, // MODE_NUMLCK; 
	0x6F, // KEY_KP0; 
	0x2F, // KEY_O; 
	0x4F, // KEY_cpslck; 
	0x0F, // KEY_T; 
	0x77, // KEY__; 
	0x37, // KEY__; 
	0x57, // KEY__; 
	0x17, // MOD_LALT; 
	0x67, // KEY_KP3; 
	0x27, // KEY_N; 
	0x47, // KEY_pgdn; 
	0x07, // KEY_S; 
	0x7B, // KEY__; 
	0x3B, // KEY__; 
	0x5B, // KEY__; 
	0x1B, // MOD_LCTRL; 
	0x6B, // KEY_KP7; 
	0x2B, // KEY_Q; 
	0x4B, // KEY_home; 
	0x0B, // KEY_Z; 
	0x73, // KEY__; 
	0x33, // KEY__; 
	0x53, // KEY__; 
	0x13, // KEY_smcol; 
	0x63, // KEY_KP2; 
	0x23, // KEY_V; 
	0x43, // KEY_darr; 
	0x03, // KEY_U; 
	0x7D, // KEY__; 
	0x3D, // KEY__; 
	0x5D, // KEY__; 
	0x1D, // KEY_F4; 
	0x6D, // KEY_KPslash; 
	0x2D, // KEY_lbr; 
	0x4D, // KEY_scrlck; 
	0x0D, // KEY__; 
	0x75, // KEY__; 
	0x35, // KEY__; 
	0x55, // KEY__; 
	0x15, // KEY__; 
	0x65, // KEY_KPast; 
	0x25, // KEY_rbr; 
	0x45, // KEY_PrtScr; 
	0x05, // KEY__; 
	0x79, // KEY__; 
	0x39, // KEY__; 
	0x59, // KEY__; 
	0x19, // KEY_ins; 
	0x69, // KEY_KP1; 
	0x29, // KEY_X; 
	0x49, // KEY_end; 
	0x09, // KEY_B; 
	0x71, // KEY__; 
	0x31, // KEY__; 
	0x51, // KEY__; 
	0x11, // MODE_FUNC; 
	0x61, // KEY_KPenter; 
	0x21, // KEY_F; 
	0x41, // KEY_enter; 
	0x01, // KEY_W; 
	0x7E, // KEY__; 
	0x3E, // KEY__; 
	0x5E, // KEY__; 
	0x1E, // KEY_ping; 
	0x6E, // KEY_KP9; 
	0x2E, // KEY_A; 
	0x4E, // KEY_pgup; 
	0x0E, // KEY_E; 
	0x76, // KEY__; 
	0x36, // KEY__; 
	0x56, // KEY__; 
	0x16, // KEY_dot; 
	0x66, // KEY_KPcomma; 
	0x26, // KEY_P; 
	0x46, // KEY_del; 
	0x06, // KEY_H; 
	0x7A, // KEY__; 
	0x3A, // KEY__; 
	0x5A, // KEY__; 
	0x1A, // KEY__; 
	0x6A, // KEY_KPminus; 
	0x2A, // KEY_J; 
	0x4A, // KEY_tab; 
	0x0A, // KEY_K; 
	0x72, // KEY__; 
	0x32, // KEY__; 
	0x52, // KEY__; 
	0x12, // KEY_esc; 
	0x62, // KEY_KP6; 
	0x22, // KEY_G; 
	0x42, // KEY_rarr; 
	0x02, // KEY_Y; 
	0x7C, // KEY__; 
	0x3C, // KEY__; 
	0x5C, // KEY__; 
	0x1C, // KEY_F9; 
	0x6C, // KEY_KP8; 
	0x2C, // KEY_M; 
	0x4C, // KEY_uarr; 
	0x0C, // KEY_D; 
	0x74, // KEY__; 
	0x34, // KEY__; 
	0x54, // KEY__; 
	0x14, // KEY_comma; 
	0x64, // KEY_KP5; 
	0x24, // KEY_C; 
	0x44, // KEY_bckspc; 
	0x04, // KEY_R; 
	0x78, // KEY__; 
	0x38, // KEY__; 
	0x58, // KEY__; 
	0x18, // KEY__; 
	0x68, // KEY_KP4; 
	0x28, // KEY_L; 
	0x48, // KEY_larr; 
	0x08, // KEY_I; 
	0x70, // MODE_RESET; 
	0x30, // MULTI_NumShift; 
	0x50, // KEY_break; 
	0x10, // MODE_NUM; 
	0x60, // KEY_KPplus; 
	0x20, // KEY_spc; 
	0x40, // MOD_LSHIFT; 
	0x00, // KEY__; no keys pressed 
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	};
uint8_t keymap_fn[256] = {
	0x7F, // KEY__; 
	0x3F, // KEY__; 
	0x5F, // KEY__; 
	0x1F, // KEY__; 
	0x00, // KEY__;  0x60 
	0x2F, // KEY__; 
	0x4F, // KEY__; 
	0x0F, // KEY__; 
	0x77, // KEY__; 
	0x37, // KEY__; 
	0x57, // KEY__; 
	0x17, // MOD_LALT; 
	0x67, // KEY__; 
	0x27, // KEY__; 
	0x47, // KEY__; 
	0x07, // KEY__; 
	0x7B, // KEY__; 
	0x3B, // KEY__; 
	0x5B, // KEY__; 
	0x1B, // MOD_LCTRL; 
	0x6B, // KEY__; 
	0x2B, // KEY__; 
	0x4B, // KEY__; 
	0x0B, // KEY__; 
	0x73, // KEY__; 
	0x33, // KEY__; 
	0x53, // KEY__; 
	0x13, // KEY__; 
	0x63, // KEY__; 
	0x23, // KEY_F12; 
	0x43, // KEY__; 
	0x03, // KEY__; 
	0x7D, // KEY__; 
	0x3D, // KEY__; 
	0x5D, // KEY__; 
	0x1D, // KEY__; 
	0x6D, // KEY__; 
	0x2D, // KEY__; 
	0x4D, // KEY__; 
	0x0D, // KEY__; 
	0x75, // KEY__; 
	0x35, // KEY__; 
	0x55, // KEY__; 
	0x15, // KEY__; 
	0x65, // KEY__; 
	0x25, // KEY__; 
	0x45, // KEY__; 
	0x05, // KEY__; 
	0x79, // KEY__; 
	0x39, // KEY__; 
	0x59, // KEY__; 
	0x19, // KEY__; 
	0x69, // KEY__; 
	0x29, // KEY__; 
	0x49, // KEY__; 
	0x09, // KEY__; 
	0x71, // KEY__; 
	0x31, // KEY__; 
	0x51, // KEY__; 
	0x11, // MODE_RESET; 
	0x61, // KEY__; 
	0x21, // KEY_F9; 
	0x41, // KEY__; 
	0x01, // KEY_F5; 
	0x7E, // KEY__; 
	0x3E, // KEY__; 
	0x5E, // KEY__; 
	0x1E, // KEY__; 
	0x6E, // KEY__; 
	0x2E, // KEY__; 
	0x4E, // KEY__; 
	0x0E, // KEY__; 
	0x76, // KEY__; 
	0x36, // KEY__; 
	0x56, // KEY__; 
	0x16, // KEY__; 
	0x66, // KEY__; 
	0x26, // KEY_F11; 
	0x46, // KEY__; 
	0x06, // KEY__; 
	0x7A, // KEY__; 
	0x3A, // KEY__; 
	0x5A, // KEY__; 
	0x1A, // KEY__; 
	0x6A, // KEY__; 
	0x2A, // KEY__; 
	0x4A, // KEY__; 
	0x0A, // KEY__; 
	0x72, // KEY__; 
	0x32, // KEY__; 
	0x52, // KEY__; 
	0x12, // KEY__; 
	0x62, // KEY__; 
	0x22, // KEY_F8; 
	0x42, // KEY__; 
	0x02, // KEY_F4; 
	0x7C, // KEY__; 
	0x3C, // KEY__; 
	0x5C, // KEY__; 
	0x1C, // KEY__; 
	0x6C, // KEY__; 
	0x2C, // KEY_F10; 
	0x4C, // KEY__; 
	0x0C, // KEY__; 
	0x74, // KEY__; 
	0x34, // KEY__; 
	0x54, // KEY__; 
	0x14, // KEY__; 
	0x64, // KEY__; 
	0x24, // KEY_F7; 
	0x44, // KEY__; 
	0x04, // KEY_F3; 
	0x78, // KEY__; 
	0x38, // KEY__; 
	0x58, // KEY__; 
	0x18, // KEY__; 
	0x68, // KEY__; 
	0x28, // KEY_F6; 
	0x48, // KEY__; 
	0x08, // KEY_F2; 
	0x70, // MODE_RESET; 
	0x30, // MULTI_NumShift; 
	0x50, // KEY__; 
	0x10, // KEY__; 
	0x60, // KEY_KPplus; 
	0x20, // KEY_F1; 
	0x40, // MOD_LSHIFT; 
	0x00, // KEY__; 
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	};
uint8_t keymap_num_sym[256] = {
	0x7F, // KEY__; 
	0x3F, // KEY_numlock; 
	0x5F, // KEY__; 
	0x1F, // MODE_RESET; 
	0x6F, // KEY_KP0; 
	0x2F, // KEY_0; 
	0x4F, // KEY_cpslck; 
	0x0F, // MACRO_000;   000 
	0x77, // KEY__; 
	0x37, // KEY__; 
	0x57, // KEY__; 
	0x17, // MOD_RALT; 
	0x67, // KEY_KP3; 
	0x27, // KEY_lbr; 
	0x47, // KEY_pgdn; 
	0x07, // KEY_minus; 
	0x7B, // KEY__; 
	0x3B, // KEY__; 
	0x5B, // KEY__; 
	0x1B, // MOD_RCTRL; 
	0x6B, // KEY_KP7; 
	0x2B, // FORCE_LSHIFT|KEY_slash;       ? 
	0x4B, // KEY_home; 
	0x0B, // KEY_grave; 
	0x73, // KEY__; 
	0x33, // KEY__; 
	0x53, // KEY__; 
	0x13, // KEY_smcol; 
	0x63, // KEY_KP2; 
	0x23, // KEY_rbr; 
	0x43, // KEY_darr; 
	0x03, // MACRO_quotes;   "" and a back arrow 
	0x7D, // KEY__; 
	0x3D, // KEY__; 
	0x5D, // KEY__; 
	0x1D, // KEY__; 
	0x6D, // KEY_KPslash; 
	0x2D, // KEY_lbr; 
	0x4D, // KEY_scrlck; 
	0x0D, // KEY__; 
	0x75, // KEY__; 
	0x35, // KEY__; 
	0x55, // KEY__; 
	0x15, // KEY__; 
	0x65, // KEY_KPast; 
	0x25, // KEY_rbr; 
	0x45, // KEY_PrtScr; 
	0x05, // KEY__; 
	0x79, // KEY__; 
	0x39, // KEY__; 
	0x59, // KEY__; 
	0x19, // KEY_ins; 
	0x69, // KEY_KP1; 
	0x29, // FORCE_LSHIFT|KEY_7;       & 
	0x49, // KEY_end; 
	0x09, // KEY_bckslsh; 
	0x71, // KEY__; 
	0x31, // KEY__; 
	0x51, // KEY__; 
	0x11, // MODE_FUNC; 
	0x61, // KEY_KPenter; 
	0x21, // KEY_9; 
	0x41, // KEY_enter; 
	0x01, // KEY_5; 
	0x7E, // KEY__; 
	0x3E, // KEY__; 
	0x5E, // KEY__; 
	0x1E, // KEY_ping; 
	0x6E, // KEY_KP9; 
	0x2E, // FORCE_LSHIFT|KEY_equal; 
	0x4E, // KEY_pgup; 
	0x0E, // KEY_equal; 
	0x76, // KEY__; 
	0x36, // KEY__; 
	0x56, // KEY__; 
	0x16, // KEY_dot; 
	0x66, // KEY_KPcomma; 
	0x26, // FORCE_LSHIFT|KEY_5;   % 
	0x46, // KEY_del; 
	0x06, // MACRO_00;   00 
	0x7A, // KEY__; 
	0x3A, // KEY__; 
	0x5A, // KEY__; 
	0x1A, // KEY__; 
	0x6A, // KEY_KPminus; 
	0x2A, // MACRO_parens;       () and a back arrow 
	0x4A, // KEY_tab; 
	0x0A, // FORCE_LSHIFT|KEY_4;   $ 
	0x72, // KEY__; 
	0x32, // KEY__; 
	0x52, // KEY__; 
	0x12, // KEY_esc; 
	0x62, // KEY_KP6; 
	0x22, // KEY_8; 
	0x42, // KEY_rarr; 
	0x02, // KEY_4; 
	0x7C, // KEY__; 
	0x3C, // KEY__; 
	0x5C, // KEY__; 
	0x1C, // KEY__; 
	0x6C, // KEY_KP8; 
	0x2C, // FORCE_LSHIFT|KEY_8; 
	0x4C, // KEY_uarr; 
	0x0C, // KEY_slash; 
	0x74, // KEY__; 
	0x34, // KEY__; 
	0x54, // KEY__; 
	0x14, // KEY_comma; 
	0x64, // KEY_KP5; 
	0x24, // KEY_7; 
	0x44, // KEY_bckspc; 
	0x04, // KEY_3; 
	0x78, // KEY__; 
	0x38, // KEY__; 
	0x58, // KEY__; 
	0x18, // KEY__; 
	0x68, // KEY_KP4; 
	0x28, // KEY_6; 
	0x48, // KEY_larr; 
	0x08, // KEY_2; 
	0x70, // MODE_RESET; 
	0x30, // MULTI_NumShift; 
	0x50, // KEY_break; 
	0x10, // KEY_spc; 
	0x60, // KEY_KPplus; 
	0x20, // KEY_1; 
	0x40, // MOD_RSHIFT; 
	0x00, // KEY__; 
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	};
#endif
